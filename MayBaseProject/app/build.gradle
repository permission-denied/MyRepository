apply plugin: 'com.android.application'


//加载资源
Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)
def API_DEVELOP_HOST = properties.getProperty('API_DEVELOP_HOST')
android {

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def formatDate = new Date().format('yyMMddHHmm')
                def apkName = "project_" + formatDate + "_V" + variant.versionName  + ".apk"
                outputFileName = apkName
            }
        }
    }


    compileSdkVersion 26
    buildToolsVersion "28.0.2"
    defaultConfig {
        applicationId "com.may.base"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "String", "API_HOST", "${API_PRODUCTION_HOST}"
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix "_release"
        }

        //预发布环境
        preview {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "String", "API_HOST", "${API_PREVIEW_HOST}"
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix "_preview"
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "String", "API_HOST", "${API_DEVELOP_HOST}"
            versionNameSuffix "_debug"
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //图片加载  glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    //Leakcanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'

    //EventBus
    compile 'de.greenrobot:eventbus:3.0.0-beta1'

    //日志
    compile 'com.orhanobut:logger:1.15'

    //封装了RecyclerView,支持各种效果
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.0'

    //butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    //json解析
    compile 'com.alibaba:fastjson:1.2.7'

    //okhttp+retrofit_rxjava
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:converter-scalars:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.3.0'
    compile 'com.squareup.okio:okio:1.7.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'


    compile 'com.jaeger.statusbarutil:library:1.5.1'


    testCompile 'junit:junit:4.12'
}
